{"ast":null,"code":"var _jsxFileName = \"C:\\\\react_apps\\\\mooc-app\\\\src\\\\components\\\\mooc\\\\ListCommentsComponent.jsx\";\nimport React, { Component } from 'react'; //import { Route, Redirect } from 'react-router-dom' //REACT-5\n\nimport CommentDataService from '../../api/comment/CommentDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport moment from 'moment/moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListCommentsComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: [// {id:1, description: 'Learn React', inResponseTo:0, targetDate:new Date, username: \"instructor 1\"},\n        // {id:2, description: 'Test comment 2',  inResponseTo:1, targetDate:new Date, username: \"instructor 1\"},\n        // {id:3, description: 'Test comment 3', inResponseTo:2, targetDate:new Date, username: \"instructor 1\"}\n      ],\n      message: null\n    };\n    this.deleteCommentClicked = this.deleteCommentClicked.bind(this);\n    this.updateCommentClicked = this.updateCommentClicked.bind(this);\n    this.refreshComments = this.refreshComments.bind(this);\n    this.updateCommentClicked = this.updateCommentClicked.bind(this);\n    this.addCommentClicked = this.addCommentClicked.bind(this);\n  }\n\n  componentDidMount() {\n    // let username = AuthenticationService.getLoggedInUserName()\n    // CommentDataService.retrieveAllComments(username)\n    // .then(\n    //     response=>{\n    //         // console.log(response)\n    //         this.setState({comments:response.data})\n    //     }\n    // )   \n    console.log(\"componentDidMount\");\n    this.refreshComments();\n    console.log(this.state);\n  }\n\n  refreshComments() {\n    let username = AuthenticationService.getLoggedInUserName();\n    CommentDataService.retrieveAllComments(username).then(response => {\n      // console.log(response)\n      this.setState({\n        comments: response.data\n      });\n    });\n  } //When deleting comments\n\n\n  deleteCommentClicked(id) {\n    let username = AuthenticationService.getLoggedInUserName(); // console.log(id + \" \" + username)\n\n    CommentDataService.deleteComment(username, id).then(response => {\n      this.setState({\n        message: `Delete of todo ${id} successful.`\n      });\n      this.refreshComments();\n    });\n  }\n\n  addCommentClicked() {\n    console.log(\"create \");\n    this.props.navigate('/comments/-1');\n  }\n\n  updateCommentClicked(id) {\n    console.log(\"update \" + id);\n    this.props.navigate(`/comments/${id}`); // let username = AuthenticationService.getLoggedInUserName()\n    // // console.log(id + \" \" + username)\n    // CommentDataService.deleteComment(username, id)\n    // .then(\n    //     response=>{\n    //         this.setState({message:`Delete of todo ${id} successful.`})\n    //         this.refreshComments()\n    //     }\n    // )\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"in response to comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Target Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Commenter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.comments.map(comment => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: comment.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: comment.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: comment.inResponseTo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: moment(comment.targetDate).format('YYYY-MM-DD')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: comment.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  onClick: () => this.updateCommentClicked(comment.id),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-warning\",\n                  onClick: () => this.deleteCommentClicked(comment.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 25\n              }, this)]\n            }, comment.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: this.addCommentClicked,\n            children: \"Add comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ListCommentsComponent;","map":{"version":3,"names":["React","Component","CommentDataService","AuthenticationService","moment","ListCommentsComponent","constructor","props","state","comments","message","deleteCommentClicked","bind","updateCommentClicked","refreshComments","addCommentClicked","componentDidMount","console","log","username","getLoggedInUserName","retrieveAllComments","then","response","setState","data","id","deleteComment","navigate","render","map","comment","description","inResponseTo","targetDate","format"],"sources":["C:/react_apps/mooc-app/src/components/mooc/ListCommentsComponent.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\n//import { Route, Redirect } from 'react-router-dom' //REACT-5\r\nimport CommentDataService from '../../api/comment/CommentDataService.js'\r\nimport AuthenticationService from './AuthenticationService.js'\r\nimport moment from 'moment/moment'\r\n\r\nclass ListCommentsComponent extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            comments:\r\n            [\r\n                // {id:1, description: 'Learn React', inResponseTo:0, targetDate:new Date, username: \"instructor 1\"},\r\n                // {id:2, description: 'Test comment 2',  inResponseTo:1, targetDate:new Date, username: \"instructor 1\"},\r\n                // {id:3, description: 'Test comment 3', inResponseTo:2, targetDate:new Date, username: \"instructor 1\"}\r\n            ],\r\n            message: null\r\n        \r\n        }\r\n        this.deleteCommentClicked = this.deleteCommentClicked.bind(this)\r\n        this.updateCommentClicked = this.updateCommentClicked.bind(this)\r\n        this.refreshComments = this.refreshComments.bind(this)\r\n        this.updateCommentClicked = this.updateCommentClicked.bind(this)\r\n        this.addCommentClicked = this.addCommentClicked.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        // let username = AuthenticationService.getLoggedInUserName()\r\n        // CommentDataService.retrieveAllComments(username)\r\n        // .then(\r\n        //     response=>{\r\n        //         // console.log(response)\r\n        //         this.setState({comments:response.data})\r\n        //     }\r\n\r\n        // )   \r\n        console.log(\"componentDidMount\")\r\n        this.refreshComments();\r\n        console.log(this.state)\r\n    }\r\n\r\n    refreshComments(){\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n        CommentDataService.retrieveAllComments(username)\r\n        .then(\r\n            response=>{\r\n                // console.log(response)\r\n                this.setState({comments:response.data})\r\n            }\r\n\r\n        )   \r\n    }\r\n\r\n\r\n    //When deleting comments\r\n    deleteCommentClicked(id){\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n        // console.log(id + \" \" + username)\r\n        CommentDataService.deleteComment(username, id)\r\n        .then(\r\n            response=>{\r\n                this.setState({message:`Delete of todo ${id} successful.`})\r\n                this.refreshComments()\r\n            }\r\n        )\r\n    }\r\n    addCommentClicked(){\r\n        console.log(\"create \") \r\n        this.props.navigate('/comments/-1')\r\n      \r\n    }\r\n\r\n    updateCommentClicked(id){\r\n        console.log(\"update \" + id) \r\n        this.props.navigate(`/comments/${id}`)\r\n        // let username = AuthenticationService.getLoggedInUserName()\r\n        // // console.log(id + \" \" + username)\r\n        // CommentDataService.deleteComment(username, id)\r\n        // .then(\r\n        //     response=>{\r\n        //         this.setState({message:`Delete of todo ${id} successful.`})\r\n        //         this.refreshComments()\r\n        //     }\r\n        // )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        \r\n        <div>\r\n            <h1>List Comments</h1>\r\n            {this.state.message && <div className =\"alert alert-success\">{this.state.message}</div>}\r\n            <div className=\"container\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <th>description</th>\r\n                        <th>in response to comment</th>\r\n                        <th>Target Date</th>\r\n                        <th>Commenter</th>\r\n                        <th>Update</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        this.state.comments.map(\r\n                            comment =>\r\n                            <tr key = {comment.id}>\r\n                        <td>{comment.id}</td>\r\n                        <td>{comment.description}</td>\r\n                        <td>{comment.inResponseTo}</td>\r\n                        <td>{moment(comment.targetDate).format('YYYY-MM-DD')}</td>\r\n                        <td>{comment.username}</td>\r\n                        <td><button className = \"btn btn-success\" onClick={()=> this.updateCommentClicked(comment.id)}>Update</button></td>\r\n                        <td><button className = \"btn btn-warning\" onClick={()=> this.deleteCommentClicked(comment.id)}>Delete</button></td>\r\n                    </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <div className=\"row\">\r\n                <button className='btn btn-success' onClick={this.addCommentClicked}>Add comment</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default ListCommentsComponent"],"mappings":"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"},"metadata":{},"sourceType":"module"}