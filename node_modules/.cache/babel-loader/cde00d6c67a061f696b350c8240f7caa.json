{"ast":null,"code":"var _jsxFileName = \"C:\\\\react_apps\\\\mooc-app\\\\src\\\\components\\\\mooc\\\\CommentComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport moment from 'moment/moment';\nimport AuthenticationService from './AuthenticationService';\nimport CommentDataService from '../../api/comment/CommentDataService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CommentComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.params.id,\n      description: \"\",\n      inResponseTo: \"\",\n      targetDate: moment(new Date()).format('YYYY-MM-DD'),\n      username: \"\"\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  } //When Updating(PUT) or Creating(POST) comments\n\n\n  onSubmit(values) {\n    let username = AuthenticationService.getLoggedInUserName();\n    CommentDataService.updateComment(username, this.state.id, {\n      //Use state values for those which are carried over from ListComments\n      //Use values. if obtained from Formik.\n      //\n      id: this.state.id,\n      description: values.description,\n      inResponseTo: values.inResponseTo,\n      targetDate: this.state.targetDate,\n      username: this.state.username\n    }).then(() => {});\n    console.log(values);\n  }\n\n  componentDidMount() {\n    let username = AuthenticationService.getLoggedInUserName();\n    CommentDataService.retrieveComment(username, this.state.id).then(response => this.setState({\n      description: response.data.description,\n      inResponseTo: response.data.inResponseTo\n    }));\n  } //Validation on form fields\n\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.description) {\n      errors.description = \"Enter a description\";\n    } else if (values.description.length < 5) {\n      errors.description = \"Enter at least 5 characters in description\";\n    }\n\n    if (values.inResponseTo.length < 10) {\n      errors.inResponseTo = \"Enter a valid name of person that you're responding to\";\n    }\n\n    return errors;\n  }\n\n  render() {\n    //unpacking feature in javascript, let keys equal to dict name and it will unpack to assign \n    //keys to values individually automatically\n    let {\n      description,\n      inResponseTo\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            description,\n            inResponseTo\n          },\n          onSubmit: this.onSubmit //validateOnBlur = {false}\n          //validateOnChange = {false}\n          ,\n          validate: this.validate,\n          enableReinitialize: true,\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"description\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"inResponseTo\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"In response to\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"inResponseTo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default CommentComponent;","map":{"version":3,"names":["React","Component","Formik","Field","Form","ErrorMessage","moment","AuthenticationService","CommentDataService","CommentComponent","constructor","props","state","id","params","description","inResponseTo","targetDate","Date","format","username","onSubmit","bind","validate","values","getLoggedInUserName","updateComment","then","console","log","componentDidMount","retrieveComment","response","setState","data","errors","length","render"],"sources":["C:/react_apps/mooc-app/src/components/mooc/CommentComponent.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { Formik, Field, Form, ErrorMessage} from 'formik'\r\nimport moment from 'moment/moment'\r\n\r\nimport AuthenticationService from './AuthenticationService'\r\nimport CommentDataService from '../../api/comment/CommentDataService.js'\r\n \r\nclass CommentComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            id: this.props.params.id,\r\n            description: \"\",\r\n            inResponseTo: \"\",\r\n            targetDate: moment(new Date()).format('YYYY-MM-DD'),\r\n            username: \"\"\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n    }\r\n    \r\n    //When Updating(PUT) or Creating(POST) comments\r\n    onSubmit(values){\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n        \r\n        CommentDataService.updateComment(username, this.state.id, {\r\n            //Use state values for those which are carried over from ListComments\r\n            //Use values. if obtained from Formik.\r\n            //\r\n            id:this.state.id,\r\n            description:values.description,\r\n            inResponseTo:values.inResponseTo,\r\n            targetDate: this.state.targetDate,\r\n            username:this.state.username\r\n        }).then(\r\n            ()=>{\r\n\r\n                \r\n            }\r\n\r\n\r\n        )\r\n        console.log(values);\r\n    } \r\n\r\n    componentDidMount(){\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n        CommentDataService.retrieveComment(username, this.state.id)\r\n        .then(\r\n            response=>this.setState({\r\n                description:response.data.description,\r\n                inResponseTo:response.data.inResponseTo\r\n            }\r\n            ))\r\n                \r\n\r\n    }\r\n\r\n    //Validation on form fields\r\n    validate(values){\r\n        let errors = {}\r\n        if(!values.description){\r\n            errors.description = \"Enter a description\"\r\n        }else if (values.description.length <5){\r\n            errors.description = \"Enter at least 5 characters in description\"\r\n        }\r\n\r\n        if(values.inResponseTo.length<10){\r\n            errors.inResponseTo=\"Enter a valid name of person that you're responding to\"\r\n\r\n        }   \r\n\r\n        \r\n        return errors\r\n    }\r\n\r\n    render(){\r\n        //unpacking feature in javascript, let keys equal to dict name and it will unpack to assign \r\n        //keys to values individually automatically\r\n        let {description, inResponseTo} = this.state\r\n    \r\n        return(\r\n        <div>\r\n            <h1>Comment</h1>\r\n            <div className=\"container\">\r\n                <Formik\r\n                    initialValues={{description, inResponseTo}}\r\n                    onSubmit= {this.onSubmit}\r\n                    //validateOnBlur = {false}\r\n                    //validateOnChange = {false}\r\n                    validate = {this.validate}\r\n                    enableReinitialize = {true}\r\n                    >\r\n                    {\r\n                        (props)=>(\r\n                            <Form>\r\n                                <ErrorMessage name = \"description\" component = \"div\"\r\n                                                    className = \"alert alert-warning\"/>\r\n                                <ErrorMessage name = \"inResponseTo\" component = \"div\"\r\n                                                    className = \"alert alert-warning\"/>\r\n\r\n                                                    \r\n                                <fieldset className=\"form-group\">\r\n                                    <label>Description</label>\r\n                                    <Field className=\"form-control\" type=\"text\" name=\"description\"/>\r\n                                </fieldset>\r\n\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>In response to</label>\r\n                                    <Field className=\"form-control\" type=\"text\" name=\"inResponseTo\"/>\r\n                                </fieldset>\r\n                                <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default CommentComponent"],"mappings":"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"},"metadata":{},"sourceType":"module"}