{"ast":null,"code":"var _jsxFileName = \"C:\\\\react_apps\\\\mooc-app\\\\src\\\\components\\\\mooc\\\\CommentComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport moment from 'moment/moment';\nimport AuthenticationService from './AuthenticationService';\nimport CommentDataService from '../../api/comment/CommentDataService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CommentComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.params.id,\n      description: \"testa\",\n      inResponseTo: \"0\",\n      targetDate: moment(new Date()).format('YYYY-MM-DD'),\n      username: \"instructor 1\"\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  onSubmit(values) {\n    console.log(values);\n  }\n\n  componentDidMount() {\n    let username = AuthenticationService.getLoggedInUserName();\n    CommentDataService.retrieveComment(username);\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.description) {\n      errors.description = \"Enter a description\";\n    } else if (values.description.length < 5) {\n      errors.description = \"Enter at least 5 characters in description\";\n    }\n\n    if (values.inResponseTo.length < 10) {\n      errors.inResponseTo = \"Enter a valid name of person that you're responding to\";\n    }\n\n    return errors;\n  }\n\n  render() {\n    //unpacking feature in javascript, let keys equal to dict name and it will unpack to assign \n    //keys to values individually automatically\n    let {\n      description,\n      inResponseTo\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            description,\n            inResponseTo\n          },\n          onSubmit: this.onSubmit //validateOnBlur = {false}\n          //validateOnChange = {false}\n          ,\n          validate: this.validate,\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"description\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"inResponseTo\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"In response to\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"inResponseTo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default CommentComponent;","map":{"version":3,"names":["React","Component","Formik","Field","Form","ErrorMessage","moment","AuthenticationService","CommentDataService","CommentComponent","constructor","props","state","id","params","description","inResponseTo","targetDate","Date","format","username","onSubmit","bind","validate","values","console","log","componentDidMount","getLoggedInUserName","retrieveComment","errors","length","render"],"sources":["C:/react_apps/mooc-app/src/components/mooc/CommentComponent.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { Formik, Field, Form, ErrorMessage} from 'formik'\r\nimport moment from 'moment/moment'\r\n\r\nimport AuthenticationService from './AuthenticationService'\r\nimport CommentDataService from '../../api/comment/CommentDataService.js'\r\n \r\nclass CommentComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            id: this.props.params.id,\r\n            description: \"testa\",\r\n            inResponseTo: \"0\",\r\n            targetDate: moment(new Date()).format('YYYY-MM-DD'),\r\n            username: \"instructor 1\"\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n    }\r\n    \r\n    onSubmit(values){\r\n        console.log(values);\r\n    } \r\n\r\n    componentDidMount(){\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n        CommentDataService.retrieveComment(username, )        \r\n\r\n    }\r\n\r\n    validate(values){\r\n        let errors = {}\r\n        if(!values.description){\r\n            errors.description = \"Enter a description\"\r\n        }else if (values.description.length <5){\r\n            errors.description = \"Enter at least 5 characters in description\"\r\n        }\r\n\r\n        if(values.inResponseTo.length<10){\r\n            errors.inResponseTo=\"Enter a valid name of person that you're responding to\"\r\n\r\n        }   \r\n\r\n        \r\n        return errors\r\n    }\r\n\r\n    render(){\r\n        //unpacking feature in javascript, let keys equal to dict name and it will unpack to assign \r\n        //keys to values individually automatically\r\n        let {description, inResponseTo} = this.state\r\n    \r\n        return(\r\n        <div>\r\n            <h1>Comment</h1>\r\n            <div className=\"container\">\r\n                <Formik\r\n                    initialValues={{description, inResponseTo}}\r\n                    onSubmit= {this.onSubmit}\r\n                    //validateOnBlur = {false}\r\n                    //validateOnChange = {false}\r\n                    validate = {this.validate}\r\n                >\r\n                    {\r\n                        (props)=>(\r\n                            <Form>\r\n                                <ErrorMessage name = \"description\" component = \"div\"\r\n                                                    className = \"alert alert-warning\"/>\r\n                                <ErrorMessage name = \"inResponseTo\" component = \"div\"\r\n                                                    className = \"alert alert-warning\"/>\r\n\r\n                                                    \r\n                                <fieldset className=\"form-group\">\r\n                                    <label>Description</label>\r\n                                    <Field className=\"form-control\" type=\"text\" name=\"description\"/>\r\n                                </fieldset>\r\n\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>In response to</label>\r\n                                    <Field className=\"form-control\" type=\"text\" name=\"inResponseTo\"/>\r\n                                </fieldset>\r\n                                <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default CommentComponent"],"mappings":"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"},"metadata":{},"sourceType":"module"}